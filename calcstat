#!/usr/bin/env ruby

def calc_mean(samples)
  sum = 0
  samples.each {|x| sum += x.to_f }
  sum / samples.size.to_f
end

def calc_sd(samples)
  n = samples.size
  return 0.0 if n < 2

  x_m = calc_mean(samples)
  s   = 0;
  samples.each {|x_i|
    xx = (x_i - x_m).to_f
    s += xx*xx
  }
  s /= (n-1).to_f
  Math.sqrt(s)
end

def calc_median(samples)
  x = samples.sort
  i = samples.size / 2
  if x.size % 2 == 0
    return (x[i-1]+x[i])/2
  else
    return x[i]
  end
end

def calc_percentiles(samples)
  x = samples.sort
  i = samples.size / 4
  
  p25 = 0
  p75 = 0
  iii = samples.size * 3 / 4
  if (x.size / 2) % 2 == 0
    p25 = (x[i-1]+x[i])/2
    p75 = (x[iii-1]+x[iii])/2
  else
    p25 = x[i]
    p75 = x[iii]
  end
    
  p50 = 0
  ii  = samples.size / 2
  if x.size % 2 == 0
    p50 = (x[ii-1]+x[ii])/2
  else
    p50 = x[ii]
  end

  [p25, p50, p75]
end

samples = []
STDIN.each {|x| samples << x.to_f }

puts "samples:  %d"   % [ samples.size]
puts "min:      %.2f" % [ samples.min ]
puts "max:      %.2f" % [ samples.max ]
puts "mean:     %.2f" % [ calc_mean(samples) ]
puts "sd:       %.2f" % [ calc_sd(samples) ]
puts "min-max:  %.2f" % [ samples.max - samples.min ]
#puts "median:   %.2f" % [ calc_median(samples) ]
p25, p50, p75 = calc_percentiles(samples)
puts "25th pct: %.2f" % [ p25 ]
puts "50th pct: %.2f" % [ p50 ]
puts "75th pct: %.2f" % [ p75 ]

#puts "min %.2f  max %.2f  mean %.2f  sd %.2f  median %.2f" % [ samples.min, samples.max, calc_mean(samples), calc_sd(samples), calc_median(samples)]
